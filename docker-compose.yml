version: '2.4'

services:

  # nefarious main application
  nefarious:
    image: lardbit/nefarious
    ports:
      - "8000:80"
    labels:
      - com.centurylinklabs.watchtower.enable=true
    restart: always
    environment:
      # https://github.com/kennethreitz/dj-database-url
      DATABASE_URL: "sqlite:////nefarious-db/db.sqlite3"
      REDIS_HOST: "redis"
      NEFARIOUS_USER: ${NEFARIOUS_USER:-admin}
      NEFARIOUS_PASS: ${NEFARIOUS_PASS:-admin}
      HOST_DOWNLOAD_PATH: ${HOST_DOWNLOAD_PATH:-/tmp/}
      CONFIG_PATH: /nefarious-db
    volumes:
      # persistent named volume for sqlite database
      - nefarious-db:/nefarious-db
    logging:
      options:
        max-size: 2m
    depends_on:
      - redis
      - jackett
      - celery

  # nefarious background task queue
  celery:
    image: lardbit/nefarious
    restart: always
    entrypoint: /app/entrypoint-celery.sh
    volumes:
      - ${HOST_DOWNLOAD_PATH:-/tmp}:/downloads
      # persistent named volume for sqlite database
      - nefarious-db:/nefarious-db
    logging:
      options:
        max-size: 2m
    labels:
      - com.centurylinklabs.watchtower.enable=true
    environment:
      # https://github.com/kennethreitz/dj-database-url
      DATABASE_URL: "sqlite:////nefarious-db/db.sqlite3"
      REDIS_HOST: "redis"
      HOST_DOWNLOAD_PATH: ${HOST_DOWNLOAD_PATH:-/tmp}
      INTERNAL_DOWNLOAD_PATH: /downloads
      CELERY_BEAT_SEPARATELY: 1  # run worker and scheduler separately
    depends_on:
      - redis

  # nefarious background task queue scheduler
  celery-scheduler:
    image: lardbit/nefarious
    restart: always
    entrypoint: /app/entrypoint-celery.sh
    volumes:
      - ${HOST_DOWNLOAD_PATH:-/tmp}:/downloads
      # persistent named volume for sqlite database
      - nefarious-db:/nefarious-db
    logging:
      options:
        max-size: 2m
    labels:
      - com.centurylinklabs.watchtower.enable=true
    environment:
      # https://github.com/kennethreitz/dj-database-url
      DATABASE_URL: "sqlite:////nefarious-db/db.sqlite3"
      REDIS_HOST: "redis"
      HOST_DOWNLOAD_PATH: ${HOST_DOWNLOAD_PATH:-/tmp}
      INTERNAL_DOWNLOAD_PATH: /downloads
      CELERY_BEAT: 1  # run celery as scheduler
      CELERY_BEAT_SEPARATELY: 1  # run worker and scheduler separately
    depends_on:
      - redis

  # database for task queue
  redis:
    image: redis
    restart: always
    mem_limit: 200m
    # NOTE: use "ports" when developing so local dev server can access redis
    #ports:
    #  - "6379:6379"
    expose:
      - 6379

  # torrent indexer service
  jackett:
    image: linuxserver/jackett
    mem_limit: 200m
    restart: always
    logging:
      options:
        max-size: 2m
    volumes:
      - jackett-config:/config
    ports:
      - "9117:9117"
    labels:
      - com.centurylinklabs.watchtower.enable=true

  # torrent server
  transmission:
    image: linuxserver/transmission
    ports:
      - "9091:9091"
      - "51413:51413"  # peer port
    restart: always
    environment:
      - PUID=${HOST_DOWNLOAD_UID:-1000}
      - PGID=${HOST_DOWNLOAD_GID:-1000}
    volumes:
      - ${HOST_DOWNLOAD_PATH:-/tmp}:/downloads
      - ./transmission-settings.json:/config/settings.json:ro
    labels:
      - com.centurylinklabs.watchtower.enable=true

  # auto update service
  watchtower:
    image: containrrr/watchtower
    restart: always
    command: --label-enable --cleanup
    environment:
      - WATCHTOWER_POLL_INTERVAL=3600
    logging:
      options:
        max-size: 2m
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - com.centurylinklabs.watchtower.enable=true

volumes:
  nefarious-db:
  jackett-config:
